name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8.15.4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
          cache-dependency-path: |
            pnpm-lock.yaml
            pnpm-workspace.yaml
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Changesets
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm run version-packages
          publish: pnpm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Resolve release version
        if: steps.changesets.outputs.published == 'true'
        id: release-version
        env:
          PUBLISHED_PACKAGES: ${{ steps.changesets.outputs.publishedPackages }}
        run: |
          set -euo pipefail
          VERSION=$(node -e "const data = process.env.PUBLISHED_PACKAGES ? JSON.parse(process.env.PUBLISHED_PACKAGES) : []; if (!Array.isArray(data) || data.length === 0) { throw new Error('Unable to determine published version'); } console.log(data[0].version);")
          echo "value=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU
        if: steps.changesets.outputs.published == 'true'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.changesets.outputs.published == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: steps.changesets.outputs.published == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push API image
        if: steps.changesets.outputs.published == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-api:latest
            ghcr.io/${{ github.repository }}-api:v${{ steps.release-version.outputs.value }}

      - name: Build and push Staff PWA image
        if: steps.changesets.outputs.published == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/staff-pwa/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-staff-pwa:latest
            ghcr.io/${{ github.repository }}-staff-pwa:v${{ steps.release-version.outputs.value }}

      - name: Build and push Admin PWA image
        if: steps.changesets.outputs.published == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: apps/admin-pwa/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-admin-pwa:latest
            ghcr.io/${{ github.repository }}-admin-pwa:v${{ steps.release-version.outputs.value }}
