name: "Secret Scanning"

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main", "master", "work" ]
  workflow_dispatch:

concurrency:
  group: secret-scan-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  secret-scan:
    name: Scan for Secrets
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
        # Fetch full history for complete scanning
        fetch-depth: 0

    - name: TruffleHog Secret Scanning
      uses: trufflesecurity/trufflehog@main
      with:
        # Scan the entire repository history
        path: ./
        # Use main branch as base for PRs
        base: ${{ github.event.pull_request.base.ref || 'main' }}
        # Scan from HEAD
        head: HEAD
        # Output format
        extra_args: --json --only-verified

    # Alternative: GitGuardian scanning (requires API key)
    # - name: GitGuardian scan
    #   uses: GitGuardian/ggshield-action@v1
    #   with:
    #     args: scan ci
    #   env:
    #     GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

    # Check for common secret patterns manually
    - name: Check for common secret patterns
      run: |
        echo "Checking for common secret patterns..."
        
        # Check for AWS keys
        if git log --all -p | grep -E "(AKIA|AWS_SECRET_ACCESS_KEY)" | grep -v "EXAMPLE"; then
          echo "⚠️ Possible AWS credentials found"
        fi
        
        # Check for private keys
        if git log --all -p | grep -E "BEGIN (RSA|DSA|EC|OPENSSH) PRIVATE KEY" | head -1; then
          echo "⚠️ Possible private key found"
        fi
        
        # Check for OpenAI keys (non-test)
        if git log --all -p | grep -E "sk-[a-zA-Z0-9]{48}" | grep -v "sk-test-" | grep -v "sk-demo-" | head -1; then
          echo "⚠️ Possible OpenAI API key found"
        fi
        
        # Check for Supabase keys
        if git log --all -p | grep -E "eyJ[a-zA-Z0-9_-]{100,}" | head -1; then
          echo "⚠️ Possible JWT token (Supabase) found"
        fi
        
        echo "Manual pattern check complete"

    # Check current files for hardcoded credentials
    - name: Check current files
      run: |
        echo "Checking current files for potential secrets..."
        
        # Exclude node_modules, .git, and other safe directories
        EXCLUDE_DIRS="node_modules|.git|dist|build|.next"
        
        # Check for base64 encoded secrets
        if grep -r -E "['\"]([A-Za-z0-9+/]{40,}={0,2})['\"]" . \
          --exclude-dir={node_modules,.git,dist,build,.next} \
          --exclude="*.lock" \
          --exclude="pnpm-lock.yaml" \
          --exclude="*.log" 2>/dev/null | grep -v ".github/workflows" | head -5; then
          echo "ℹ️ Found base64-like strings (may be legitimate)"
        fi
        
        # Check for .env files that shouldn't be committed
        if find . -name ".env.local" -o -name ".env.production" 2>/dev/null | grep -v node_modules; then
          echo "❌ ERROR: .env.local or .env.production files found in repository!"
          echo "These files should never be committed."
          exit 1
        fi
        
        echo "Current files check complete"

    - name: Report results
      if: always()
      run: |
        echo "Secret scanning complete."
        echo "Review any findings above."
        echo ""
        echo "If secrets are found:"
        echo "1. Rotate the compromised secrets immediately"
        echo "2. Remove them from git history using git-filter-repo or BFG"
        echo "3. Add patterns to .gitignore"
        echo "4. Update SECURITY.md incident log"
