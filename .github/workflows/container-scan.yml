name: Container Security Scan

on:
  push:
    branches: [ main, master, work ]
    paths:
      - '**/Dockerfile*'
      - '.github/workflows/container-scan.yml'
  pull_request:
    branches: [ main, master, work ]
    paths:
      - '**/Dockerfile*'
  schedule:
    - cron: '0 8 * * 1'  # Weekly on Mondays at 8 AM UTC
  workflow_dispatch:

jobs:
  scan-web-container:
    name: Scan Web Container Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build web container image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/web/Dockerfile
          tags: avocat-ai-web:${{ github.sha }}
          push: false
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'avocat-ai-web:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results-web.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results-web.sarif'
          category: 'container-web'

      - name: Run Trivy vulnerability scanner (table output)
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'avocat-ai-web:${{ github.sha }}'
          format: 'table'
          severity: 'CRITICAL,HIGH'

  scan-base-images:
    name: Scan Base Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    strategy:
      matrix:
        image:
          - node:20-alpine
    
    steps:
      - name: Run Trivy scan on base image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ matrix.image }}
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: '0'
