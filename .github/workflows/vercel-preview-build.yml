name: Vercel Preview Build

on:
  pull_request:

jobs:
  preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - uses: pnpm/action-setup@v2
        with:
          version: 8.15.4
          run_install: false
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Derive Supabase preview branch
        run: |
          BRANCH="${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}"
          SAFE_BRANCH=$(echo "${BRANCH}" | tr '[:upper:]' '[:lower:]' | tr -cs 'a-z0-9' '-')
          SUPABASE_BRANCH="preview-${SAFE_BRANCH}"
          echo "SUPABASE_BRANCH=${SUPABASE_BRANCH}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_SUPABASE_BRANCH=${SUPABASE_BRANCH}" >> $GITHUB_ENV
          echo "### Supabase preview branch" >> $GITHUB_STEP_SUMMARY
          echo "Using branch \`${SUPABASE_BRANCH}\` for Supabase preview resources." >> $GITHUB_STEP_SUMMARY
      - name: Check migrations
        env:
          ALLOW_SUPABASE_MIGRATIONS: '1'
        run: pnpm check:migrations
      - name: SQL lint
        run: pnpm lint:sql
      - name: Pull Vercel environment (preview)
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: pnpm dlx vercel pull --yes --environment=preview --token="$VERCEL_TOKEN"
      - name: Build Vercel preview
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: |
          pnpm dlx vercel build \
            --token="$VERCEL_TOKEN" \
            --env SUPABASE_BRANCH="$SUPABASE_BRANCH" \
            --env NEXT_PUBLIC_SUPABASE_BRANCH="$NEXT_PUBLIC_SUPABASE_BRANCH"
      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vercel-build-logs
          path: .vercel/output/logs
          if-no-files-found: ignore
