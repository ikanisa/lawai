// AUTO-GENERATED BY schema:generate. DO NOT EDIT.
import type { z } from 'zod';

export type orchestrator_commandSchema = {
    orgId: string;
    sessionId?: string | undefined;
    commandType: string;
    payload?: {
        [x: string]: unknown;
    } | undefined;
    priority?: number | undefined;
    scheduledFor?: string | undefined;
    worker?: ("director" | "safety" | "domain") | undefined;
};
export type orchestrator_command = z.infer<typeof orchestrator_commandSchema>;

export type orchestrator_connectorSchema = {
    orgId: string;
    connectorType: "erp" | "tax" | "accounting" | "compliance" | "analytics";
    name: string;
    config?: {
        [x: string]: unknown;
    } | undefined;
    status?: ("inactive" | "pending" | "active" | "error") | undefined;
    metadata?: {
        [x: string]: unknown;
    } | undefined;
};
export type orchestrator_connector = z.infer<typeof orchestrator_connectorSchema>;

export type orchestrator_jobClaimSchema = {
    orgId: string;
    worker?: "director" | "safety" | "domain";
};
export type orchestrator_jobClaim = z.infer<typeof orchestrator_jobClaimSchema>;

export type orchestrator_jobResultSchema = {
    status: "completed" | "failed" | "cancelled";
    result?: {
        [x: string]: unknown;
    } | undefined;
    error?: string | undefined;
    metadata?: {
        [x: string]: unknown;
    } | undefined;
};
export type orchestrator_jobResult = z.infer<typeof orchestrator_jobResultSchema>;

export type chatkit_createSessionSchema = {
    orgId: string;
    userId?: string | undefined;
    agentName?: string | undefined;
    channel?: ("web" | "voice") | undefined;
    metadata?: {
        [x: string]: unknown;
    } | undefined;
};
export type chatkit_createSession = z.infer<typeof chatkit_createSessionSchema>;

export type chatkit_recordEventSchema = {
    type: string;
    payload?: {
        [x: string]: unknown;
    } | undefined;
    actorType?: string | undefined;
    actorId?: string | undefined;
};
export type chatkit_recordEvent = z.infer<typeof chatkit_recordEventSchema>;

