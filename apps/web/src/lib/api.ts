import {
  DEMO_ORG_ID,
  DEMO_USER_ID,
  createRestClient,
  type AgentPlanNotice,
  type AgentPlanStep,
  type AgentRunResponse,
  type ComplianceAcknowledgements,
  type ComplianceAssessmentSummary,
  type ComplianceStatusEntry,
  type ComplianceStatusResponse,
  type DeviceSession,
  type EvaluationMetricsResponse,
  type GovernanceMetricsResponse,
  type GovernancePublication,
  type GovernancePublicationsResponse,
  type HitlDetailResponse,
  type HitlMetricsResponse,
  type OperationsChangeLogEntry,
  type OperationsGoNoGoCriterion,
  type OperationsIncident,
  type OperationsOverviewResponse,
  type OperationsSloSnapshot,
  type OperationsSloSummary,
  type RetrievalMetricsResponse,
  type SloMetricsResponse,
  type SloSnapshot,
  type SloSummary,
  type TrustPanelCaseQualitySummary,
  type TrustPanelCitationSummary,
  type TrustPanelPayload,
  type TrustPanelProvenanceSummary,
  type TrustPanelRetrievalSummary,
  type TrustPanelRiskSummary,
  type VerificationNote,
  type VerificationResult,
  type VerificationSeverity,
  type VerificationStatus,
  type WorkspaceDesk,
} from '@avocat-ai/api-clients';

import { clientEnv } from '../env.client';

const restClient = createRestClient({
  baseUrl: clientEnv.NEXT_PUBLIC_API_BASE_URL,
});

export { DEMO_ORG_ID, DEMO_USER_ID };
export type {
  AgentPlanNotice,
  AgentPlanStep,
  AgentRunResponse,
  ComplianceAcknowledgements,
  ComplianceAssessmentSummary,
  ComplianceStatusEntry,
  ComplianceStatusResponse,
  DeviceSession,
  EvaluationMetricsResponse,
  GovernanceMetricsResponse,
  GovernancePublication,
  GovernancePublicationsResponse,
  HitlDetailResponse,
  HitlMetricsResponse,
  OperationsChangeLogEntry,
  OperationsGoNoGoCriterion,
  OperationsIncident,
  OperationsOverviewResponse,
  OperationsSloSnapshot,
  OperationsSloSummary,
  RetrievalMetricsResponse,
  SloMetricsResponse,
  SloSnapshot,
  SloSummary,
  TrustPanelCaseQualitySummary,
  TrustPanelCitationSummary,
  TrustPanelPayload,
  TrustPanelProvenanceSummary,
  TrustPanelRetrievalSummary,
  TrustPanelRiskSummary,
  VerificationNote,
  VerificationResult,
  VerificationSeverity,
  VerificationStatus,
  WorkspaceDesk,
};

export const {
  submitResearchQuestion,
  requestHitlReview,
  sendTelemetryEvent,
  fetchCitations,
  fetchHitlQueue,
  fetchHitlMetrics,
  fetchHitlDetail,
  submitHitlAction,
  fetchMatters,
  fetchMatterDetail,
  fetchHitlAuditTrail,
  fetchCorpus,
  resummarizeDocument,
  fetchGovernanceMetrics,
  fetchRetrievalMetrics,
  fetchEvaluationMetrics,
  fetchSloMetrics,
  listSloSnapshots,
  createSloSnapshot,
  fetchSnapshotDiff,
  toggleAllowlistDomain,
  fetchSsoConnections,
  saveSsoConnection,
  removeSsoConnection,
  fetchScimTokens,
  createScimAccessToken,
  deleteScimAccessToken,
  fetchComplianceStatus,
  acknowledgeCompliance,
  fetchAuditEvents,
  fetchDeviceSessions,
  revokeDeviceSession,
  fetchIpAllowlist,
  upsertIpAllowlistEntry,
  deleteIpAllowlistEntry,
  fetchDraftingTemplates,
  fetchWorkspaceOverview,
  getOperationsOverview,
  getGovernancePublications,
  generateTransparencyReport,
  fetchLaunchDigestsForOrg,
  fetchDispatchesForOrg,
} = restClient;
