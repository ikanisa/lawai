// THIS FILE IS AUTO-GENERATED. DO NOT EDIT MANUALLY.
// Generated by scripts/generate-supabase-types.mjs on 2025-10-22T22:32:55.400Z
// Source: supabase/schema.sql

import { z } from 'zod';

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[];

export const SUPABASE_SCHEMA_HASH = 'sha256-ae73e68d9ea87d330adb82f88076cd54cba5d51a164d8b5045337d7ecbafcef6' as const;

const jsonSchema = z.lazy(() => z.union([z.string(), z.number(), z.boolean(), z.null(), z.record(jsonSchema), z.array(jsonSchema)]));

export type Database = {
  public: {
    Tables: {
    };
    Views: Record<string, never>;
    Functions: Record<string, never>;
    Enums: {
    };
    CompositeTypes: Record<string, never>;
  };
};

export const tableSchemas = {
} as const;

export type TableName = keyof typeof tableSchemas;
export type TableRow<Name extends TableName> = z.infer<(typeof tableSchemas)[Name]["row"]>;
export type TableInsert<Name extends TableName> = z.infer<(typeof tableSchemas)[Name]["insert"]>;
export type TableUpdate<Name extends TableName> = z.infer<(typeof tableSchemas)[Name]["update"]>;
